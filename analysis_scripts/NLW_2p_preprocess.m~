%%%% Preprocess data on samz computer before transferring to data
%%%% computer. Only modify this file on the NLW computer. 

 clear all
addpath(genpath('.')); 
colordef white; 
init_samz;

%%% globals are generated using computer dependent init file (i.e. initOEG or init_oeg_analysis1_NLW)
global basePath  imagejMacroPath imagejPath resultsPath

%% Extract TIFFs
doExtractTifs = 1

if doExtractTifs
    %convert from sbx to tiffs
    convert2pFolder()
    
    %remove SBX files
    RemoveSBXFiles(fullfile(basePath))   
end

%% Crop, DownSample and Register Images

doGRINImages = 1

if doGRINImages
    %downsample data spatially, crop, and register within a session
    grin2pReduceImageSize(basePath)

elseif doCWImages
    
end

%% Extract Traces for each Session

f = dir(fullfile(basePath,'*','*'));

for i = 1:numel(f)
    sessionDir = fullfile(f(i).folder, f(i).name)
    image_path = [sessionDir '/z0_processed.tif']
    out_path = [sessionDir '/z0_proc_reduced.tif']
    
    %check that tif existd
    if exist([f(i).folder '/' f(i).name '/' 'z0_processed.tif'])  && ~exist(outpath)
    %Run macro to load, downsample and register image stack
    cmd = ['~/Fiji.app/ImageJ-linux64', ' -macro', ' ~/src/NLW/imagejMacros/grin_2p_reduce.ijm ', ...
        image_path ',' out_path]

    fprintf(image_path)
    system(cmd)
     end
        
    %run CNMFE    
    if ~exist([f(i).folder '/' f(i).name '/z0_proc_reduced_source_extraction'],7)
    demo_large_data_2p([f(i).folder '/' f(i).name '/' 'z0_proc_reduced.tif']);
     
    end
     clear -basePath    
        
    end
end
%% Upsample Traces



%% Append Traces Together



%% Organize Metadata




